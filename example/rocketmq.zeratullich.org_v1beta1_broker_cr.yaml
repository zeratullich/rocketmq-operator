apiVersion: rocketmq.zeratullich.org/v1beta1
kind: Broker
metadata:
  #name: example-broker
  name: broker
spec:
  # Add fields here
  size: 2
  # replicationMode is the broker replica sync mode, can be ASYNC or SYNC
  #replicationMode: ASYNC
  replicationMode: SYNC
  # replicaPerGroup is the number of each broker cluster
  replicaPerGroup: 1
  # brokerImage is the customized docker image repo of the RocketMQ broker
  #brokerImage: harbor.myquanwei.com/library/rocketmq-broker:4.5.2-alpine
  brokerImage: zeratullich/rocketmq-broker:4.5.2-alpine
  # imagePullPolicy is the image pull policy
  imagePullPolicy: Always
  # allowRestart defines whether allow pod restart
  allowRestart: true
  # storageMode can be EmptyDir, HostPath, NFS
  #storageMode: HostPath
  storageMode: NFS
  # hostPath is the local path to store data
  hostPath: /data/rocketmq/broker
  # set broker cluster name
  brokerClusterName: k8s-rocketmq-cluster
  # resources limits
  resources: 
    requests:
      cpu: 200m
      memory: 1Gi
    limits:
      cpu: 500m
      memory: 2Gi
  # set java options
  xms: 1g
  xmn: 256m
  xmx: 1g
  # affinity set
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: role
                  operator: In
                  values:
                    - master
            topologyKey: "kubernetes.io/hostname"
  # volumeClaimTemplates defines the storageClass
  volumeClaimTemplates:
    - metadata:
        name: broker-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: managed-nfs-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 15Gi
